<?xml version="1.0" encoding="UTF-8"?>  
<project name="TesteGit" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
	
  <!-- set global properties for this test -->
  <property name="test.class.name" value="br.com.codigo.b.YouK" />
	

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}">
    	<classpath>  
    	  	 	<fileset dir="${lib}" >  
    	  	    	<include name="*.jar"/>  
    			</fileset>  
      	 </classpath>
    </javac>
  	  	   
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/TesteGit-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean" depends="compile"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
	
	<!--
	<target name="test">
		
		<path id="test.classpath">
		  <pathelement location="${build}" />
		  <pathelement location="${lib}/testng-6.8.jar" />
		  <fileset dir="${lib}">
		    <include name="**/*.jar"/>
		  </fileset>
		</path>
		
		<antcall target="compile" />
		
		<junit fork="yes" haltonfailure="yes">
	    <test name="${test.class.name}" />
	    <formatter type="plain" usefile="false" />
	    <classpath refid="test.classpath" />
	  </junit>
	</target>
	-->
	<target name="ykTest">		
		<antcall target="testng">		
			<param name="projecttest.suite.location" value="suites/"/>
			<param name="projecttest.suite" value="testng.xml"/>
			<param name="projecttest.infra" value="true"/>
		</antcall>
	</target>
	
	<target name="testng" depends="compile" description="Run the tests">
			<taskdef resource="testngtasks" classpath="${lib}/testng-6.8.jar"/>
			<testng outputdir="test-report">	
		
				<!--
				<testng outputdir="${basedir}/test-report">
				-->
				<jvmarg value="-Dsun.lang.ClassLoader.allowArraySyntax=true"/>
				<jvmarg value="-Xms256m"/>
				<jvmarg value="-Xmx1024m"/>
				<jvmarg value="-XX:MaxPermSize=512m"/>
				<jvmarg value="-Dfile.encoding=UTF-8"/>
				<!--
				<jvmarg value="-Demma.coverage.out.file=${emma.metadata.dir}/coverage.emma"/>
				-->
				<xmlfileset dir="../${projecttest.suite.location}/" includes="${projecttest.suite}"/>
				<classpath>
				    <path refid="build.classpath.test" />
				   <!--
				    <path refid="emma.lib" />
					<pathelement location="../${projectweb.name}/WebContent/" />
					<pathelement location="../${projectworker.name}/WebContent/" />
					<pathelement path="${core.dir}" />
					<pathelement path="${test.dir}" />
					-->
				</classpath>
			</testng>
		</target>
	
</project>